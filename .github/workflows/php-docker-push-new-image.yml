# https://issues.newrelic.com/browse/NR-6492
---
name: php-docker-push-new-image

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ gha-testing ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "The short version. If the full version is 10.1.0.589 then the short version is 10.1.0"
        required: true
        default: '9.17.0'
        type: string
      DOCKER_ORG:
        description: "The Docker Org - newrelic, for instance"
        required: true
        default: 'mycirrus'
        type: string
      DOCKER_REPO:
        description: "The Docker repo, php-daemon, for instance"
        required: true
        default: 'newrelic'
        type: string
      DOCKER_TAG:
        description: "The Docker tag, latest for instance"
        required: true
        default: 'latest'
        type: string
      PUSH_CHANGES:
        description: "Whether or not to push the changes"
        required: true
        default: false
        type: boolean

  # GHA: Facilitating reusable workflow in case required
  workflow_call:
    inputs:
      version:
        description: "The short version. If the full version is 10.1.0.589 then the short version is 10.1.0"
        required: true
        default: '9.17.0'
        type: string
      DOCKER_ORG:
        description: "The Docker Org - newrelic, for instance"
        required: true
        default: 'mycirrus'
        type: string
      DOCKER_REPO:
        description: "The Docker repo, php-daemon, for instance"
        required: true
        default: 'newrelic'
        type: string
      DOCKER_TAG:
        description: "The Docker tag, latest for instance"
        required: true
        default: 'latest'
        type: string
      PUSH_CHANGES:
        description: "Whether or not to push the changes"
        required: true
        default: false
        type: boolean

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  php-docker-push-new-image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_PAT: ${{ secrets.DOCKER_HUB_PAT }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_ORG: ${{ inputs.DOCKERHUB_USERNAME }}
      DOCKER_REPO: ${{ inputs.DOCKERHUB_USERNAME }}
      DOCKER_TAG: ${{ inputs.DOCKERHUB_USERNAME }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # - uses: actions/checkout@v2

      - name: Checkout PHP Daemon Docker Repo   ## NOT POSSIBLE as of 05/13/2021 from GHE
        uses: actions/checkout@v3
        with:
          repository: kentonshade/newrelic-php-daemon-docker
          ref: gha-dev
          # GHA Confirm we can (this works), and should use this token for this
          # purpose
          token: ${{ secrets.API_CLI_TOKEN }}
          # path: <path>

      # GHA testing only - removing directories
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      # Call push-docker-image.bash - extracted here
      # GHA testing the script
      # GHA: potentially refact this script to do it the "GHA" way
      - name: Call push-docker-image.bash
        run: |
          # chmod +x ./tools/push-docker-image.bash
          # ./tools/push-docker-image.bash ${VERSION_SHORT}
          # cat ./tools/push-docker-image.bash
          yes | docker system prune -a
          # version=$1
          cd "${version}"" || exit 1
          docker build -t "${DOCKER_ORG}"/"${DOCKER_REPO}":"${DOCKER_TAG}" -t "${DOCKER_ORG}"/"${DOCKER_REPO}":"${version}" .
          # docker login --username=newrelicphp --password ${DOCKER_HUB_PAT}
          # docker push "${DOCKER_ORG}"/"${DOCKER_REPO}"


      # GHA testing the script - grab status
      - name: git status
        run: |
          git status -sb
