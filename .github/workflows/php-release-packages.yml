---
# GHA: Jenkins job:
# https://phpagent-build.pdx.vm.datanerd.us/job/php-release-packages/configure
# GHA (04/07): This job downloads artifacts generated from the new
# release build workflow (confirm with Amber)
# We need download the artifacts generated per OS (CentOS, Alpine, AND arm64)
# GHA We may need to use a workflow_run trigger for this;
# /home/kenton/repos/github/my-actions/.github/workflows/workflow-2.yaml

name: php-release-packages

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  workflow_run:
    workflows: ['NEW release_CI (php-release-agent)']
    branches:
      - gha-dev
      - dev
      - main
    types:  ## Review if this is the comperehensive types available
      - completed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # GHA: This first job might not be reuired as we need artifacts for each
  # subsequent job and they will be downloaded as required.
  php-release-packages:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      ## GHA: We will download all artifacts and then remove what is not needed
      ##
      # Download Alpine release artifacts
      # GHa: Determine the ref to use with the download action

      # GHA: Need an action here that checks the latest workflow run ID
      # for NEW-release-build.yml.  Use gh command
      # Set env variable to run ID.  I don't think run number is necessary
      - name: Get dependent workflow ID
        env:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ always() }}
        run: |
          echo "${ACCESS_TOKEN}" | gh auth login --with-token
          gh auth status
          echo "RUN_ID=$(gh run list -w 20074295 -L 1 | cut -f 7)" >> $GITHUB_ENV

      # Check ENV variables
      - name: Check environmental variables
        if: ${{ always() }}
        run: printenv | sort -f

      - name: Download combined-artifacts
        # uses: dawidd6/action-download-artifact@v2.14.1
        # GHA: Testing new version of action
        uses: dawidd6/action-download-artifact@v2
        with:
          # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
          # Required, if artifact is from a different repo
          # github_token: ${{secrets.GITHUB_TOKEN}}
          # Required, workflow file name or ID
          workflow: NEW-release-build.yml
          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conclusion:
          #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          #   "completed", "in_progress", "queued"
          # workflow_conclusion: success
          # Optional, will get head commit SHA
          # pr: ${{github.event.pull_request.number}}
          # Optional, no need to specify if PR is
          # commit: ${{github.event.pull_request.head.sha}}
          # Optional, will use the branch
          branch: gha-dev
          # Optional, defaults to all types
          # event: push
          ## GHA: testing static values below
          # Optional, will use specified workflow run
          # run_id: 2169362908
          run_id: ${{ env.RUN_ID }}
          # Optional, run number from the workflow
          # run_number: 92
          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them in respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          # name: combined-releases-${{ github.sha }}
          # Optional, directory where to extract artifact. Defaults to the artifact name (see `name` input)
          path: combined-artifacts
          # Optional, defaults to current repo
          repo: ${{github.repository}}
          # Optional, check the workflow run whether it has an artifact
          # then will get the last available artifact from previous workflow
          # default false, just try to download from the last one
          # check_artifacts: true

      # Runs a set of commands using the runners shell
      - name: Check our directories
        run: |
          tree combined-artifacts/

  # GHA: This job requires the previous job and a Centos runner
  # Let's containerize but need to determine CentOS conntainer
  # (how to provision, etc.)
  # We will require the artifacts from new release build
  build-redhat:
    runs-on: ubuntu-latest
    env:
      GROUP: 'mycirrus'
      IMAGE: 'newrelic:nr-centos6-1.2'
    container:  ## GHA: testing using private docker image
      image: mycirrus/newrelic:nr-centos8-1.1
      credentials:
        username: ${{ secrets.DOCKER_REPO_USER }}
        password: ${{ secrets.DOCKER_USER_TOKEN }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # GHA: Required to return latest release run
      # We will need to install gh for this container
      - name: Get dependent workflow ID
        env:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ always() }}
        run: |
          echo "${ACCESS_TOKEN}" | gh auth login --with-token
          gh auth status
          echo "RUN_ID=$(gh run list -w 20074295 -L 1 | cut -f 7)" >> $GITHUB_ENV

      - name: Download combined-artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: NEW-release-build.yml
          branch: gha-dev
          run_id: ${{ env.RUN_ID }}
          path: combined-artifacts
          repo: ${{github.repository}}

      # Runs a set of commands using the runners shell
      - name: Check our directories
        run: |
          tree combined-artifacts/

      # Get the directories ready for buid-redhat.sh
      - name: Consolidate releases
        run: |
          mkdir releases
          cp -R combined-artifacts/combined-releases-*/alpine/* releases/
          cp -R combined-artifacts/combined-releases-*/centos/* releases/
          tree releases/

      # Script required the tct extension
      - name: Asset renaming as required
        run: |
          mv releases/linux/LICENSE releases/linux/LICENSE.txt

      # Install any remaining dependencies
      - name: Install any remaining dependencies
        run: |
          yum install -y screen

      # Get the directories ready for buid-redhat.sh
      - name: Change gpg
        run: |
          mv /usr/bin/gpg /usr/bin/gpg.bak
          sudo ln -s /usr/bin/gpg1 /usr/bin/gpg
          gpg --version

      - name: Build Redhat
        run: |
          echo "Calling build-redhat.sh"
          ./packaging/build-redhat.sh

      # Check for new content in releases
      - name: Check for new content in releases
        run: |
          tree releases/


  # GHA: This job requires Ubuntu runner
  # We will require the artifacts from new release build
  build-debian:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # GHA: Required to return latest release run
      # We will need to install gh for this container
      - name: Get dependent workflow ID
        env:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ always() }}
        run: |
          echo "${ACCESS_TOKEN}" | gh auth login --with-token
          gh auth status
          echo "RUN_ID=$(gh run list -w 20074295 -L 1 | cut -f 7)" >> $GITHUB_ENV

      - name: Download combined-artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: NEW-release-build.yml
          branch: gha-dev
          run_id: ${{ env.RUN_ID }}
          path: combined-artifacts
          repo: ${{github.repository}}

      # Runs a set of commands using the runners shell
      - name: Check our directories
        run: |
          tree combined-artifacts/

      # Get the directories ready for buid-redhat.sh
      - name: Consolidate releases
        run: |
          mkdir releases
          cp -R combined-artifacts/combined-releases-*/alpine/* releases/
          cp -R combined-artifacts/combined-releases-*/centos/* releases/
          tree releases/

      - name: Build/Runner dependecies
        run: |
          sudo apt -y install devscripts build-essential lintian

      - name: Build Debian
        run: |
          echo "Calling build-debian.sh"
          ./packaging/build-debian.sh

      - name: "Attempt to resolve dpkg-checkbuilddeps: error: Unmet build dependencies: debhelper"
        if: ${{ failure }}
        run: |
          sudo apt install \
          -y $(dpkg-checkbuilddeps 2>&1 | sed -e 's/dpkg-checkbuilddeps:\serror:\sUnmet build dependencies: //g' -e  's/[\(][^)]*[\)] //g')

      # Check for new content in releases
      - name: Check for new content in releases
        run: |
          tree releases/


  # GHA: This job requires Ubuntu runner
  # We will require the artifacts from new release build
  build-tar:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # GHA: Required to return latest release run
      # We will need to install gh for this container
      - name: Get dependent workflow ID
        env:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ always() }}
        run: |
          echo "${ACCESS_TOKEN}" | gh auth login --with-token
          gh auth status
          echo "RUN_ID=$(gh run list -w 20074295 -L 1 | cut -f 7)" >> $GITHUB_ENV

      - name: Download combined-artifactsv2
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: NEW-release-build.yml
          branch: gha-dev
          run_id: ${{ env.RUN_ID }}
          path: combined-artifacts
          repo: ${{github.repository}}

      # Runs a set of commands using the runners shell
      - name: Check our directories
        run: |
          tree combined-artifacts/

      # Get the directories ready for buid-redhat.sh
      - name: Consolidate releases
        run: |
          mkdir releases
          cp -R combined-artifacts/combined-releases-*/alpine/* releases/
          cp -R combined-artifacts/combined-releases-*/centos/* releases/
          tree releases/

      - name: Build Tar
        run: |
          echo "Calling build-tgz.sh"
          ./packaging/build-tgz.sh

      # Check for new content in releases
      - name: Check for new content in releases
        run: |
          tree releases/
