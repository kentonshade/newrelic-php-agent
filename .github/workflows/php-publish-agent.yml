---

# GHA: Requires checkout of php_deploymest
# Jenkins: https://phpagent-build.pdx.vm.datanerd.us/job/php-publish-agent/configure
# Jira: https://issues.newrelic.com/browse/NR-6483
## There is NO testing-2-production config in the current Jenkins job

name: php-publish-agent

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ gha-testing ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      ACTION:
        description: "Required - the action to perform"
        required: true
        default: ''
        type: choice
        options:
          - release-2-testing
          - testing-2-production
          - bigchange-2-testing
          - master-2-testing
      VERSION:
        description: "Required - the action version to publish"
        required: true
        default: ''
        type: string
      REPO:
        description: "Repo from which we retrieve workflow runs"
        required: true
        default: 'kentonshade/newrelic-php-agent'
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  php-publish-agent:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # container:  ## kds = testing using private docker image
    #   image: kentonshade/mycirrus_1:ubuntu-focal-starter
    #   credentials:
    #      username: ${{ secrets.DOCKER_REPO_USER }}
    #      password: ${{ secrets.DOCKER_USER_PASS }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout PHP Deployment Repo   ## NOT POSSIBLE as of 05/13/2021 from GHE
        uses: actions/checkout@v2
        with:
          repository: newrelic/php-agent-php_deployment
          ref: master
          # GHA Confirm we can (this works), and should use this token for this
          # purpose
          token: ${{ secrets.API_CLI_TOKEN }}
          # path: <path>

      # GHA: set AWS credentials
      # GHA: Check updates to this action
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Download S3 bucket path to nr-downloads
      - name: aws cp to local dir.
        run: |
          mkdir -p ./nr-downloads
          aws s3 cp s3://nr-downloads-private/75ac22b116 ./nr-downloads/ --recursive

      # Check nr-downloads contents
      - name: Check nr-downloads contents
        run: |
          ls -la ./nr-downloads

      # GHA: Required to return latest release run
      # We will need to install gh for this container
      # GHA These two following steps have to be conbfigured for different workflows
      # Check for bigchange-2-testing
      - name: Get dependent workflow ID
        env:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ always() }}
        run: |
          echo "${ACCESS_TOKEN}" | gh auth login --with-token
          gh auth status
          # Below check for correct workflow ID
          echo "RUN_ID=$(gh run list -w 24616877 -R ${{ inputs.REPO }} -L 1 | cut -f 7)" >> $GITHUB_ENV

      # GHA: temp ref used for davidd6 due to issue with latest
      - name: Download combined-artifacts from php-bigchange-packages.yml
        if: ${{ inputs.ACTION == 'bigchange-2-testing' }}
        uses: dawidd6/action-download-artifact@v2.21.0
        with:
          # GHA: Will we be able to use php-release-packages?
          workflow: php-bigchange-packages.yml
          branch: main
          run_id: ${{ env.RUN_ID }}
          path: incoming
          # GHA: This should always be from the agent repo, but confirm
          repo: ${{github.repository}}

      # GHA We need another workflow ID?
      - name: Get dependent workflow ID
        env:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ always() }}
        run: |
          echo "${ACCESS_TOKEN}" | gh auth login --with-token
          gh auth status
          # Below check for correct workflow ID
          echo "RUN_ID=$(gh run list -w 24616878 -R ${{ inputs.REPO }} -L 1 | cut -f 7)" >> $GITHUB_ENV

      # GHA: temp ref used for davidd6 due to issue with latest
      - name: Download combined-artifacts from php-bigchange-tarballs.yml
        if: ${{ inputs.ACTION == 'bigchange-2-testing' }}
        uses: dawidd6/action-download-artifact@v2
        with:
          # GHA: Can we use php-release-packages.yml, as php-release-tarballs consolidated?
          workflow: php-bigchange-tarballs.yml
          branch: main
          run_id: ${{ env.RUN_ID }}
          path: incoming
          # GHA: This should always be from the agent repo, but confirm
          repo: ${{github.repository}}


      # Check for master-2-testing
      # GHA THERE ARE NO PHP-MASTER-PACKAGES, NOR PHP-MASTER-TARBALLS JOBS
      # ARE THESE ARTIFACTS REQUIRED?
      # - name: Get dependent workflow ID
      #   env:
      #     ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   if: ${{ always() }}
      #   run: |
      #     echo "${ACCESS_TOKEN}" | gh auth login --with-token
      #     gh auth status
      #     # Below check for correct workflow ID
      #     echo "RUN_ID=$(gh run list -w 20074295 -L 1 | cut -f 7)" >> $GITHUB_ENV

      # # GHA: temp ref used for davidd6 due to issue with latest
      # - name: Download combined-artifacts
      #   if: ${{ inputs.ACTION == 'master-2-testing' }}
      #   uses: dawidd6/action-download-artifact@v2.21.0
      #   with:
      #     workflow: php-bigchange-packages.yml
      #     branch: gha-dev
      #     run_id: ${{ env.RUN_ID }}
      #     path: incoming
      #     # GHA: This should always be from the agent repo, but confirm
      #     repo: ${{github.repository}}


      # Check for release-2-testing
      - name: Get dependent workflow ID
        env:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ always() }}
        run: |
          echo "${ACCESS_TOKEN}" | gh auth login --with-token
          gh auth status
          # Below check for correct workflow ID
          echo "RUN_ID=$(gh run list -w 24182732 -R ${{ inputs.REPO }} -L 1 | cut -f 7)" >> $GITHUB_ENV

      # GHA: temp ref used for davidd6 due to issue with latest
      - name: Download combined-artifacts from php-release-packages.yml
        if: ${{ inputs.ACTION == 'release-2-testing' }}
        uses: dawidd6/action-download-artifact@v2.21.0
        with:
          workflow: php-release-packages.yml
          branch: main
          run_id: ${{ env.RUN_ID }}
          path: incoming
          # GHA: This should always be from the agent repo, but confirm
          repo: ${{github.repository}}

      # Check for release-2-testing
      - name: Get dependent workflow ID
        env:
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ always() }}
        run: |
          echo "${ACCESS_TOKEN}" | gh auth login --with-token
          gh auth status
          # Below check for correct workflow ID
          echo "RUN_ID=$(gh run list -w 24616878 -R ${{ inputs.REPO }} -L 1 | cut -f 7)" >> $GITHUB_ENV

      # GHA: temp ref used for davidd6 due to issue with latest
      - name: Download combined-artifacts from php-release-tarballs.yml
        if: ${{ inputs.ACTION == 'release-2-testing' }}
        uses: dawidd6/action-download-artifact@v2.21.0
        with:
          workflow: php-release-tarballs.yml
          branch: main
          run_id: ${{ env.RUN_ID }}
          path: incoming
          # GHA: This should always be from the agent repo, but confirm
          repo: ${{github.repository}}

      # Check incoming contents
      - name: Check incoming
        id: check-incoming
        if: ${{ always() }}
        run: |
          tree -a ./incoming
          ls -la ./incoming

      # Set DEPLOY_HOME, source common.bash
      # This should probably go to the top?
      # Need to set DEPLOY_HOME for subsequent steps.
      - name: Set DEPLOY_HOME, source common.bash
        if: ${{ always() }}
        id: set-deploy-home
        run: |
          # Determine our location in the filesystem.
          # See: http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
          echo "current path is $(pwd)"
          DEPLOY_HOME=$(pwd)
          # pushd . > /dev/null
          #   DEPLOY_HOME=${BASH_SOURCE[0]}

          #   if [[ -h $DEPLOY_HOME ]]; then
          #     while [[ -h $DEPLOY_HOME ]]; do
          #       cd "$(dirname "$DEPLOY_HOME")"
          #       DEPLOY_HOME=$(readlink "$DEPLOY_HOME")
          #     done
          #   fi

          #   cd "$(dirname "$DEPLOY_HOME")" > /dev/null
          #   DEPLOY_HOME=$(pwd)
          # popd > /dev/null

          export DEPLOY_HOME

          # shellcheck source=lib/common.bash
          source "$DEPLOY_HOME/lib/common.bash"
          echo ::set-output name=DEPLOY_HOME::"${DEPLOY_HOME}"

      # Call s3-pull.bash
      - name: Call s3-pull.bash
        if: ${{ always() }}
        env:
          DEPLOY_HOME: ${{ steps.set-deploy-home.outputs.DEPLOY_HOME}}
        id: call-s3-pull-bash
        run: |
          echo "current path is $(pwd)"
          ./libexec/s3-pull.bash --help

      # Call s3-push.bash
      - name: Call s3-push.bash
        if: ${{ always() }}
        env:
          DEPLOY_HOME: ${{ steps.set-deploy-home.outputs.DEPLOY_HOME}}
        id: call-s3-push-bash
        run: |
          ./libexec/s3-push.bash --help

      # Call deploy.bash (create incoming, etc.)
      # GHA This path doesn't exist - "--prefix=/opt/nr-downloads"
      # GHA we may not need this as I'm including the push-pull scripts above
      # I believe we're already doing eberything else the script provides?
      - name: Call deploy.bash
        run: |
          ls -la "${GITHUB_WORKSPACE}"
          # ./deploy-php.bash --prefix=/opt/nr-downloads \
          # --incoming-dir="${GITHUB_WORKSPACE}/incoming" \
          # --no-download "$ACTION" "$VERSION"
