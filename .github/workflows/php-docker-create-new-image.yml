# https://issues.newrelic.com/browse/NR-6490

---
name: php-docker-create-new-image

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ gha-testing ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "PHP Agent version"
        required: true
        default: ''
        type: string
      version_short:
        description: "The short version. If the full version is 10.1.0.589 then the short version is 10.1.0"
        required: true
        default: ''
        type: string
      base_repo:
        description: "The base repository to use in the PR creation (GH CLI"
        required: true
        default: 'kentonshade/newrelic-php-daemon-docker'
        type: string
      PUSH_CHANGES:
        description: "Whether or not to push the changes"
        default: false
        type: boolean
  # GHA: Facilitating reusable workflow in case required
  workflow_call:
    inputs:
      version:
        description: "PHP Agent version"
        required: true
        default: ''
        type: string
      version_short:
        description: "The short version. If the full version is 10.1.0.589 then the short version is 10.1.0"
        required: true
        default: ''
        type: string
      base_repo:
        description: "The base repository to use in the PR creation (GH CLI"
        required: true
        default: 'kentonshade/newrelic-php-daemon-docker'
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  php-docker-create-new-image:
    runs-on: ubuntu-latest
    env:
      version: ${{ inputs.version }}
      version_short: ${{ inputs.version_short }}
      base_repo: ${{ inputs.base_repo }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # - uses: actions/checkout@v2

      - name: Checkout PHP Daemon Docker Repo   ## NOT POSSIBLE as of 05/13/2021 from GHE
        uses: actions/checkout@v3
        with:
          repository: kentonshade/newrelic-php-daemon-docker
          ref: gha-dev
          # GHA Confirm we can (this works), and should use this token for this
          # purpose
          token: ${{ secrets.API_CLI_TOKEN }}
          # path: <path>

      # GHA List repo contents
      - name: GHA list repo content
        run: |
          ls -la

      # GHA testing only - removing directories
      # GHA: REMOVE THIS STEP PRIOR TO MERGING
      - name: GHA testing only - removing directories
        run: |
          rm -rf 9.21*

      # GHA testing only - creating/updating text file
      # GHA: REMOVE THIS STEP PRIOR TO MERGING
      - name: GHA testing only - creating text file
        run: |
          echo "${GITHUB_RUN_ID}" > run_id.txt
          cat run_id.txt

      # GHA testing the script - grab status
      - name: git status
        run: |
          git status -sb

      # Call update-docker-image.bash
      # GHA testing the script
      - name: Call update-docker-image.bash
        run: |
          chmod +x ./tools/update-docker-image.bash
          ./tools/update-docker-image.bash "${version}"
          # cat ./tools/update-docker-image.bash

      # GHA testing the script - grab status
      - name: git status
        run: |
          git status -sb
          git branch --show-current

      # GHA pull this testing version for now
      # Just need to test PR creation, etc.
      # - name: git pull version_short
      #   run: |
      #     git remote update
      #     git pull origin "${version_short}"

      # GHA GH CLI Submit PR
      # temp use of --force option for testing only
      - name: Push new branch
        id: push-new-branch
        if: ${{ inputs.PUSH_CHANGES == true }}
        run: |
          git push --force origin "${version_short}"

      - name: Authenitcate GH CLI
        env:
          ACCESS_TOKEN: ${{ secrets.API_CLI_TOKEN }}
        if: ${{ always() }}
        run: |
          echo "${ACCESS_TOKEN}" | gh auth login --with-token
          gh auth status

      # GHA GH CLI Submit PR
      - name: GH CLI Submit PR
        id: submit-pr
        if: ${{ inputs.PUSH_CHANGES == true }}
        run: |
          echo "Submitting PR"
          gh pr create --title "php-docker-create-new-image-version bump to ${version_short}" --body "testing only" --base gha-dev --head "${version_short}" -R "${base_repo}" --reviewer @me --assignee @me
